{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home-page/home-page.component.ts","webpack:///src/app/home-page/home-page.component.html","webpack:///src/app/phone-feature-list/phone-feature-list.component.ts","webpack:///src/app/phone-feature-list/phone-feature-list.component.html","webpack:///src/app/phone-item/phone-item.component.ts","webpack:///src/app/phone-item/phone-item.component.html","webpack:///src/app/phone-list/phone-list.component.ts","webpack:///src/app/phone-list/phone-list.component.html","webpack:///src/app/pipes/background-image.pipe.ts","webpack:///src/app/printing-page/printing-page.component.ts","webpack:///src/app/promotion-list/promotion-list.component.ts","webpack:///src/app/promotion-list/promotion-list.component.html","webpack:///src/app/services/capture-screenshot.service.ts","webpack:///src/app/services/phone-flyer.service.ts","webpack:///src/app/services/phones.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","materialModules","AppModule","declarations","providers","bootstrap","HomePageComponent","phoneFlyerService","captureService","selectedPhone","getSelectedPhone","salePerson","getSalePersonInfo","phone","setSalePersonInfo","setTimeout","node","document","getElementById","capture","name","onExport","PhoneFeatureListComponent","PhoneItemComponent","selected","emit","changeDetection","OnPush","PhoneListComponent","phoneService","router","phones$","getAllPhones","setSelectedPhone","BackgroundImagePipe","sanitization","url","defaultUrl","imageUrl","bypassSecurityTrustStyle","PrintingPageComponent","PromotionListComponent","CaptureScreenshotService","toBlob","blob","SALE_PERSON_STORE_KEY","PhoneFlyerService","person","localStorage","setItem","JSON","stringify","data","getItem","parse","storeAddress","PhoneService","http","get","pipe","phones","map","picture","promotion","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { PrintingPageComponent } from './printing-page/printing-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', component: HomePageComponent },\r\n  { path: 'print', pathMatch: 'full', component: PrintingPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'khuyenmai-oppo';\n}\n","<header>\r\n  <div class=\"title\">Thông tin khuyến mãi OPPO</div>\r\n</header>\r\n\r\n<main>\r\n  <router-outlet></router-outlet>\r\n</main>\r\n\r\n<footer>\r\n  <div>Sử dụng nội bộ cho nhân viên OPPO Việt Nam.</div>\r\n</footer>","import { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { PrintingPageComponent } from './printing-page/printing-page.component';\r\nimport { PhoneListComponent } from './phone-list/phone-list.component';\r\nimport { PromotionListComponent } from './promotion-list/promotion-list.component';\r\nimport { PhoneFeatureListComponent } from './phone-feature-list/phone-feature-list.component';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { PhoneService } from './services/phones.service';\r\nimport { PhoneFlyerService } from './services/phone-flyer.service';\r\nimport { CaptureScreenshotService } from './services/capture-screenshot.service';\r\nimport { PhoneItemComponent } from './phone-item/phone-item.component';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { BackgroundImagePipe } from './pipes/background-image.pipe';\r\n\r\nconst materialModules = [\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatSnackBarModule\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomePageComponent,\r\n    PrintingPageComponent,\r\n    PhoneListComponent,\r\n    PromotionListComponent,\r\n    PhoneFeatureListComponent,\r\n    PhoneItemComponent,\r\n    BackgroundImagePipe\r\n  ],\r\n  imports: [\r\n    ...materialModules,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NoopAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [\r\n    PhoneService,\r\n    PhoneFlyerService,\r\n    CaptureScreenshotService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PhoneFlyerService } from '../services/phone-flyer.service';\r\nimport { SalePerson } from '../models/sale-person';\r\nimport { Phone } from '../models/phone';\r\nimport { CaptureScreenshotService } from '../services/capture-screenshot.service';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  selectedPhone: Phone;\r\n  salePerson: SalePerson;\r\n\r\n  constructor(\r\n    private phoneFlyerService: PhoneFlyerService,\r\n    private captureService: CaptureScreenshotService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedPhone = this.phoneFlyerService.getSelectedPhone();\r\n    this.salePerson = this.phoneFlyerService.getSalePersonInfo();\r\n  }\r\n\r\n  onExport(phone: Phone): void {\r\n    this.selectedPhone = phone;\r\n    this.phoneFlyerService.setSalePersonInfo(this.salePerson);\r\n  }\r\n\r\n  readyToExport(): void {\r\n    setTimeout(() => {\r\n      const node = document.getElementById('flyer-print-container');\r\n      if (!!node) {\r\n        this.captureService.capture(node, `${this.selectedPhone.name}-${this.salePerson.name}`);\r\n\r\n        setTimeout(() => {\r\n          this.selectedPhone = null;\r\n        }, 1500);\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n}\r\n","<mat-form-field>\r\n  <mat-label><mat-icon>account_box</mat-icon> Tên nhân viên</mat-label>\r\n  <input matInput [(ngModel)]=\"salePerson.name\">\r\n</mat-form-field>\r\n<mat-form-field>\r\n  <mat-label><mat-icon>call</mat-icon> Số điện thoại</mat-label>\r\n  <input matInput [(ngModel)]=\"salePerson.phone\">\r\n</mat-form-field>\r\n<mat-form-field>\r\n  <mat-label>Địa chỉ cửa hàng</mat-label>\r\n  <input matInput [(ngModel)]=\"salePerson.storeAddress\">\r\n</mat-form-field>\r\n<app-phone-list\r\n  (selected)=\"onExport($event)\"\r\n></app-phone-list>\r\n\r\n<div id=\"flyer-print-container\" class=\"print-template\" *ngIf=\"!!selectedPhone\">\r\n    <img class=\"phone-frame\" [src]=\"selectedPhone.promotion\" (load)=\"readyToExport()\" />\r\n    <!-- <img class=\"phone-picture\" [src]=\"selectedPhone.picture\" /> -->\r\n\r\n    <div class=\"sale-person-info\">\r\n        <div class=\"name\">{{salePerson.name}}</div>\r\n        <div class=\"phone\">{{salePerson.phone}}</div>\r\n        <div class=\"address\">{{salePerson.storeAddress}}</div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-phone-feature-list',\n  templateUrl: './phone-feature-list.component.html',\n  styleUrls: ['./phone-feature-list.component.scss']\n})\nexport class PhoneFeatureListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>phone-feature-list works!</p>\n","import { Component, OnInit, ChangeDetectionStrategy, Input, EventEmitter, Output } from '@angular/core';\r\nimport { Phone } from '../models/phone';\r\n\r\n@Component({\r\n  selector: 'app-phone-item',\r\n  templateUrl: './phone-item.component.html',\r\n  styleUrls: ['./phone-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PhoneItemComponent implements OnInit {\r\n  @Input() phone: Phone;\r\n\r\n  @Output() selected: EventEmitter<Phone> = new EventEmitter<Phone>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onExport(): void {\r\n    this.selected.emit(this.phone);\r\n  }\r\n\r\n}\r\n","<div class=\"phone-frame\">\r\n  <img class=\"phone-image\" [src]=\"phone.picture\" [alt]=\"phone.name\" />\r\n  <div class=\"caption\">\r\n    <div class=\"phone-name\">{{ phone.name }}</div>\r\n  </div>\r\n  <button class=\"btn-action\" mat-flat-button color=\"primary\" (click)=\"onExport()\">Xuất ảnh</button>\r\n</div>","import { Component, OnInit, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Phone } from '../models/phone';\r\nimport { PhoneService } from '../services/phones.service';\r\nimport { PhoneFlyerService } from '../services/phone-flyer.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-phone-list',\r\n  templateUrl: './phone-list.component.html',\r\n  styleUrls: ['./phone-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PhoneListComponent implements OnInit {\r\n  phones$: Observable<Phone[]>;\r\n\r\n  @Output() selected: EventEmitter<Phone> = new EventEmitter<Phone>();\r\n\r\n  constructor(\r\n    private phoneService: PhoneService,\r\n    private phoneFlyerService: PhoneFlyerService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.phones$ = this.phoneService.getAllPhones();\r\n  }\r\n\r\n  public selectPhone(phone: Phone): void {\r\n    this.phoneFlyerService.setSelectedPhone(phone);\r\n\r\n    this.selected.emit(phone);\r\n\r\n    // this.router.navigateByUrl('/print');\r\n  }\r\n}\r\n","<div class=\"phone-list-wrapper\">\r\n    <app-phone-item\r\n        *ngFor=\"let phone of phones$ | async\"\r\n        [phone]=\"phone\"\r\n        (selected)=\"selectPhone(phone)\"\r\n        class=\"phone-item\"\r\n    ></app-phone-item>\r\n</div>","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'backgroundImage' })\r\nexport class BackgroundImagePipe implements PipeTransform {\r\n    constructor(private sanitization: DomSanitizer) { }\r\n\r\n    transform(url: string, defaultUrl: string = ''): any {\r\n        const imageUrl = !!url ? url : defaultUrl;\r\n        return !!imageUrl ? this.sanitization.bypassSecurityTrustStyle(`url(${imageUrl})`) : '';\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PhoneFlyerService } from '../services/phone-flyer.service';\r\nimport { Phone } from '../models/phone';\r\nimport { SalePerson } from '../models/sale-person';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-printing-page',\r\n  templateUrl: './printing-page.component.html',\r\n  styleUrls: ['./printing-page.component.scss']\r\n})\r\nexport class PrintingPageComponent implements OnInit {\r\n  selectedPhone: Phone;\r\n  salePerson: SalePerson;\r\n\r\n  constructor(\r\n    private phoneFlyerService: PhoneFlyerService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.selectedPhone = this.phoneFlyerService.getSelectedPhone();\r\n    this.salePerson = this.phoneFlyerService.getSalePersonInfo();\r\n\r\n    // if (!this.selectedPhone) {\r\n    //   this.router.navigate()\r\n    // }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-promotion-list',\n  templateUrl: './promotion-list.component.html',\n  styleUrls: ['./promotion-list.component.scss']\n})\nexport class PromotionListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>promotion-list works!</p>\n","import domtoimage from 'dom-to-image';\r\nimport { Injectable } from '@angular/core';\r\nimport { saveAs } from 'file-saver';\r\n\r\n@Injectable()\r\nexport class CaptureScreenshotService {\r\n    capture(node: HTMLElement, name: string): void {\r\n        domtoimage.toBlob(node)\r\n            .then(blob => {\r\n                saveAs(blob, `${name}.png`);\r\n            });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Phone } from '../models/phone';\r\nimport { SalePerson } from '../models/sale-person';\r\nimport { PhoneFlyer } from '../models/phone-flyer';\r\n\r\nconst SALE_PERSON_STORE_KEY = 'oppo-promotion-sale-person';\r\n\r\n@Injectable()\r\nexport class PhoneFlyerService {\r\n    private selectedPhone: Phone;\r\n    private salePerson: SalePerson;\r\n\r\n\r\n    setSelectedPhone(phone: Phone): void {\r\n        this.selectedPhone = phone;\r\n    }\r\n\r\n    getSelectedPhone(): Phone {\r\n        return this.selectedPhone;\r\n    }\r\n\r\n    setSalePersonInfo(person: SalePerson): void {\r\n        this.salePerson = person;\r\n        localStorage.setItem(SALE_PERSON_STORE_KEY, JSON.stringify(person));\r\n    }\r\n\r\n    getSalePersonInfo(): SalePerson {\r\n        if (!this.salePerson) {\r\n            const data = localStorage.getItem(SALE_PERSON_STORE_KEY);\r\n            if (!!data) {\r\n                this.salePerson = JSON.parse(data);\r\n            }\r\n        }\r\n\r\n        // fallback default value\r\n        if (!this.salePerson) {\r\n            this.salePerson = {\r\n                name: '',\r\n                phone: '',\r\n                storeAddress: ''\r\n            };\r\n        }\r\n\r\n        return this.salePerson;\r\n    }\r\n\r\n    generateFlyerInfo(): PhoneFlyer {\r\n        return {\r\n            selectedPhone: this.selectedPhone,\r\n            salePerson: this.salePerson\r\n        };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Phone } from '../models/phone';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class PhoneService {\r\n    /**\r\n     *\r\n     */\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getAllPhones(): Observable<Phone[]> {\r\n        return this.http.get<Phone[]>('assets/api/phones.json').pipe(map(phones => phones.map(phone => ({\r\n            ...phone,\r\n            picture: `assets/images/${phone.picture}`,\r\n            promotion: `assets/images/${phone.promotion}`,\r\n        }))));\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}